FROM python:3.10-slim AS base

# Atualiza e instala dependências mínimas necessárias
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libsqlite3-dev \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

WORKDIR /workspaces/airflow

RUN python -m venv /opt/venv
ENV PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH"

# Criação de usuário
RUN groupadd -g 1000 airflow && \
    useradd -m -u 1000 -g 1000 -s /bin/bash airflow

# Copia apenas requirements.txt primeiro — aproveita melhor o cache
COPY requirements.txt /tmp/requirements.txt

# Instala o pip atualizado + dependências
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r /tmp/requirements.txt


# Segunda parte da imagem — Multi-stage build opcional (pra reduzir ainda mais o tamanho)
FROM python:3.10-slim AS final

ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

WORKDIR /workspaces/airflow

# Copia o venv pronto da imagem base
COPY --from=base /opt/venv /opt/venv
ENV PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH"

RUN groupadd -g 1000 airflow && \
    useradd -m -u 1000 -g 1000 -s /bin/bash airflow

COPY init-airflow.sh /tmp/init-airflow.sh
COPY entrypoint.sh /tmp/entrypoint.sh
RUN chmod +x /tmp/entrypoint.sh /tmp/init-airflow.sh

USER airflow

ENTRYPOINT ["/tmp/entrypoint.sh"]
